version: '3.8'

services:
  ekko-bot:
    image: ekkolyth/ekko-bot:latest
    container_name: ekko-bot
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      API_PORT: ${API_PORT:-1337}
      WEB_PORT: ${WEB_PORT:-3000}
    ports:
      - '${API_PORT:-1337}:1337'
      - '${WEB_PORT:-3000}:3000'
    volumes:
      - ekko_data:/app/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${API_PORT:-1337}/healthz']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:16-alpine
    container_name: ekko-db
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ekko}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ekko_password}
      POSTGRES_DB: ${POSTGRES_DB:-ekko_bot}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-ekko} -d ${POSTGRES_DB:-ekko_bot}']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  ekko_data:

networks:
  default:
    name: ekko-network
