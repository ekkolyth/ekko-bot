/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthVerifyDiscordRouteImport } from './routes/auth/verify-discord'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthConnectDiscordRouteImport } from './routes/auth/connect-discord'
import { Route as ApiQueueIndexRouteImport } from './routes/api/queue/index'
import { Route as ApiHealthzIndexRouteImport } from './routes/api/healthz/index'
import { Route as ApiGuildsIndexRouteImport } from './routes/api/guilds/index'
import { Route as authenticatedDashboardIndexRouteImport } from './routes/(authenticated)/dashboard/index'
import { Route as ApiAuthHasDiscordRouteImport } from './routes/api/auth/has-discord'
import { Route as ApiAuthDebugDiscordRouteImport } from './routes/api/auth/debug-discord'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'
import { Route as ApiGuildsGuildIdChannelsRouteImport } from './routes/api/guilds/$guildId/channels'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyDiscordRoute = AuthVerifyDiscordRouteImport.update({
  id: '/verify-discord',
  path: '/verify-discord',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthConnectDiscordRoute = AuthConnectDiscordRouteImport.update({
  id: '/connect-discord',
  path: '/connect-discord',
  getParentRoute: () => AuthRouteRoute,
} as any)
const ApiQueueIndexRoute = ApiQueueIndexRouteImport.update({
  id: '/api/queue/',
  path: '/api/queue/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiHealthzIndexRoute = ApiHealthzIndexRouteImport.update({
  id: '/api/healthz/',
  path: '/api/healthz/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiGuildsIndexRoute = ApiGuildsIndexRouteImport.update({
  id: '/api/guilds/',
  path: '/api/guilds/',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedDashboardIndexRoute =
  authenticatedDashboardIndexRouteImport.update({
    id: '/(authenticated)/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiAuthHasDiscordRoute = ApiAuthHasDiscordRouteImport.update({
  id: '/api/auth/has-discord',
  path: '/api/auth/has-discord',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthDebugDiscordRoute = ApiAuthDebugDiscordRouteImport.update({
  id: '/api/auth/debug-discord',
  path: '/api/auth/debug-discord',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiGuildsGuildIdChannelsRoute =
  ApiGuildsGuildIdChannelsRouteImport.update({
    id: '/api/guilds/$guildId/channels',
    path: '/api/guilds/$guildId/channels',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/connect-discord': typeof AuthConnectDiscordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify-discord': typeof AuthVerifyDiscordRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/auth/debug-discord': typeof ApiAuthDebugDiscordRoute
  '/api/auth/has-discord': typeof ApiAuthHasDiscordRoute
  '/dashboard': typeof authenticatedDashboardIndexRoute
  '/api/guilds': typeof ApiGuildsIndexRoute
  '/api/healthz': typeof ApiHealthzIndexRoute
  '/api/queue': typeof ApiQueueIndexRoute
  '/api/guilds/$guildId/channels': typeof ApiGuildsGuildIdChannelsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/connect-discord': typeof AuthConnectDiscordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify-discord': typeof AuthVerifyDiscordRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/auth/debug-discord': typeof ApiAuthDebugDiscordRoute
  '/api/auth/has-discord': typeof ApiAuthHasDiscordRoute
  '/dashboard': typeof authenticatedDashboardIndexRoute
  '/api/guilds': typeof ApiGuildsIndexRoute
  '/api/healthz': typeof ApiHealthzIndexRoute
  '/api/queue': typeof ApiQueueIndexRoute
  '/api/guilds/$guildId/channels': typeof ApiGuildsGuildIdChannelsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/connect-discord': typeof AuthConnectDiscordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify-discord': typeof AuthVerifyDiscordRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/auth/debug-discord': typeof ApiAuthDebugDiscordRoute
  '/api/auth/has-discord': typeof ApiAuthHasDiscordRoute
  '/(authenticated)/dashboard/': typeof authenticatedDashboardIndexRoute
  '/api/guilds/': typeof ApiGuildsIndexRoute
  '/api/healthz/': typeof ApiHealthzIndexRoute
  '/api/queue/': typeof ApiQueueIndexRoute
  '/api/guilds/$guildId/channels': typeof ApiGuildsGuildIdChannelsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/auth/connect-discord'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-discord'
    | '/api/auth/$'
    | '/api/auth/debug-discord'
    | '/api/auth/has-discord'
    | '/dashboard'
    | '/api/guilds'
    | '/api/healthz'
    | '/api/queue'
    | '/api/guilds/$guildId/channels'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/connect-discord'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-discord'
    | '/api/auth/$'
    | '/api/auth/debug-discord'
    | '/api/auth/has-discord'
    | '/dashboard'
    | '/api/guilds'
    | '/api/healthz'
    | '/api/queue'
    | '/api/guilds/$guildId/channels'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/auth/connect-discord'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-discord'
    | '/api/auth/$'
    | '/api/auth/debug-discord'
    | '/api/auth/has-discord'
    | '/(authenticated)/dashboard/'
    | '/api/guilds/'
    | '/api/healthz/'
    | '/api/queue/'
    | '/api/guilds/$guildId/channels'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
  ApiAuthDebugDiscordRoute: typeof ApiAuthDebugDiscordRoute
  ApiAuthHasDiscordRoute: typeof ApiAuthHasDiscordRoute
  authenticatedDashboardIndexRoute: typeof authenticatedDashboardIndexRoute
  ApiGuildsIndexRoute: typeof ApiGuildsIndexRoute
  ApiHealthzIndexRoute: typeof ApiHealthzIndexRoute
  ApiQueueIndexRoute: typeof ApiQueueIndexRoute
  ApiGuildsGuildIdChannelsRoute: typeof ApiGuildsGuildIdChannelsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify-discord': {
      id: '/auth/verify-discord'
      path: '/verify-discord'
      fullPath: '/auth/verify-discord'
      preLoaderRoute: typeof AuthVerifyDiscordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/connect-discord': {
      id: '/auth/connect-discord'
      path: '/connect-discord'
      fullPath: '/auth/connect-discord'
      preLoaderRoute: typeof AuthConnectDiscordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/api/queue/': {
      id: '/api/queue/'
      path: '/api/queue'
      fullPath: '/api/queue'
      preLoaderRoute: typeof ApiQueueIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/healthz/': {
      id: '/api/healthz/'
      path: '/api/healthz'
      fullPath: '/api/healthz'
      preLoaderRoute: typeof ApiHealthzIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/guilds/': {
      id: '/api/guilds/'
      path: '/api/guilds'
      fullPath: '/api/guilds'
      preLoaderRoute: typeof ApiGuildsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)/dashboard/': {
      id: '/(authenticated)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authenticatedDashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/has-discord': {
      id: '/api/auth/has-discord'
      path: '/api/auth/has-discord'
      fullPath: '/api/auth/has-discord'
      preLoaderRoute: typeof ApiAuthHasDiscordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/debug-discord': {
      id: '/api/auth/debug-discord'
      path: '/api/auth/debug-discord'
      fullPath: '/api/auth/debug-discord'
      preLoaderRoute: typeof ApiAuthDebugDiscordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/guilds/$guildId/channels': {
      id: '/api/guilds/$guildId/channels'
      path: '/api/guilds/$guildId/channels'
      fullPath: '/api/guilds/$guildId/channels'
      preLoaderRoute: typeof ApiGuildsGuildIdChannelsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthRouteRouteChildren {
  AuthConnectDiscordRoute: typeof AuthConnectDiscordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthVerifyDiscordRoute: typeof AuthVerifyDiscordRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthConnectDiscordRoute: AuthConnectDiscordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthVerifyDiscordRoute: AuthVerifyDiscordRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
  ApiAuthDebugDiscordRoute: ApiAuthDebugDiscordRoute,
  ApiAuthHasDiscordRoute: ApiAuthHasDiscordRoute,
  authenticatedDashboardIndexRoute: authenticatedDashboardIndexRoute,
  ApiGuildsIndexRoute: ApiGuildsIndexRoute,
  ApiHealthzIndexRoute: ApiHealthzIndexRoute,
  ApiQueueIndexRoute: ApiQueueIndexRoute,
  ApiGuildsGuildIdChannelsRoute: ApiGuildsGuildIdChannelsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
