/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as authenticatedRouteRouteImport } from './routes/(authenticated)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthVerifyRouteImport } from './routes/auth/verify'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthLinkRouteImport } from './routes/auth/link'
import { Route as AuthConnectRouteImport } from './routes/auth/connect'
import { Route as ApiQueueIndexRouteImport } from './routes/api/queue/index'
import { Route as ApiHealthzIndexRouteImport } from './routes/api/healthz/index'
import { Route as ApiGuildsIndexRouteImport } from './routes/api/guilds/index'
import { Route as authenticatedMusicIndexRouteImport } from './routes/(authenticated)/music/index'
import { Route as authenticatedDashboardIndexRouteImport } from './routes/(authenticated)/dashboard/index'
import { Route as ApiAuthHasDiscordRouteImport } from './routes/api/auth/has-discord'
import { Route as ApiAuthDeleteAutoCreatedAccountRouteImport } from './routes/api/auth/delete-auto-created-account'
import { Route as ApiAuthCheckPasswordAccountRouteImport } from './routes/api/auth/check-password-account'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'
import { Route as ApiQueueSkipIndexRouteImport } from './routes/api/queue/skip/index'
import { Route as ApiQueueRemoveIndexRouteImport } from './routes/api/queue/remove/index'
import { Route as ApiQueuePlayIndexRouteImport } from './routes/api/queue/play/index'
import { Route as ApiQueuePauseIndexRouteImport } from './routes/api/queue/pause/index'
import { Route as ApiQueueClearIndexRouteImport } from './routes/api/queue/clear/index'
import { Route as ApiGuildsGuildIdChannelsRouteImport } from './routes/api/guilds/$guildId/channels'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedRouteRoute = authenticatedRouteRouteImport.update({
  id: '/(authenticated)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyRoute = AuthVerifyRouteImport.update({
  id: '/verify',
  path: '/verify',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLinkRoute = AuthLinkRouteImport.update({
  id: '/link',
  path: '/link',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthConnectRoute = AuthConnectRouteImport.update({
  id: '/connect',
  path: '/connect',
  getParentRoute: () => AuthRouteRoute,
} as any)
const ApiQueueIndexRoute = ApiQueueIndexRouteImport.update({
  id: '/api/queue/',
  path: '/api/queue/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiHealthzIndexRoute = ApiHealthzIndexRouteImport.update({
  id: '/api/healthz/',
  path: '/api/healthz/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiGuildsIndexRoute = ApiGuildsIndexRouteImport.update({
  id: '/api/guilds/',
  path: '/api/guilds/',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedMusicIndexRoute = authenticatedMusicIndexRouteImport.update({
  id: '/music/',
  path: '/music/',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authenticatedDashboardIndexRoute =
  authenticatedDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const ApiAuthHasDiscordRoute = ApiAuthHasDiscordRouteImport.update({
  id: '/api/auth/has-discord',
  path: '/api/auth/has-discord',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthDeleteAutoCreatedAccountRoute =
  ApiAuthDeleteAutoCreatedAccountRouteImport.update({
    id: '/api/auth/delete-auto-created-account',
    path: '/api/auth/delete-auto-created-account',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiAuthCheckPasswordAccountRoute =
  ApiAuthCheckPasswordAccountRouteImport.update({
    id: '/api/auth/check-password-account',
    path: '/api/auth/check-password-account',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiQueueSkipIndexRoute = ApiQueueSkipIndexRouteImport.update({
  id: '/api/queue/skip/',
  path: '/api/queue/skip/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiQueueRemoveIndexRoute = ApiQueueRemoveIndexRouteImport.update({
  id: '/api/queue/remove/',
  path: '/api/queue/remove/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiQueuePlayIndexRoute = ApiQueuePlayIndexRouteImport.update({
  id: '/api/queue/play/',
  path: '/api/queue/play/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiQueuePauseIndexRoute = ApiQueuePauseIndexRouteImport.update({
  id: '/api/queue/pause/',
  path: '/api/queue/pause/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiQueueClearIndexRoute = ApiQueueClearIndexRouteImport.update({
  id: '/api/queue/clear/',
  path: '/api/queue/clear/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiGuildsGuildIdChannelsRoute =
  ApiGuildsGuildIdChannelsRouteImport.update({
    id: '/api/guilds/$guildId/channels',
    path: '/api/guilds/$guildId/channels',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof authenticatedRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/connect': typeof AuthConnectRoute
  '/auth/link': typeof AuthLinkRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/auth/check-password-account': typeof ApiAuthCheckPasswordAccountRoute
  '/api/auth/delete-auto-created-account': typeof ApiAuthDeleteAutoCreatedAccountRoute
  '/api/auth/has-discord': typeof ApiAuthHasDiscordRoute
  '/dashboard': typeof authenticatedDashboardIndexRoute
  '/music': typeof authenticatedMusicIndexRoute
  '/api/guilds': typeof ApiGuildsIndexRoute
  '/api/healthz': typeof ApiHealthzIndexRoute
  '/api/queue': typeof ApiQueueIndexRoute
  '/api/guilds/$guildId/channels': typeof ApiGuildsGuildIdChannelsRoute
  '/api/queue/clear': typeof ApiQueueClearIndexRoute
  '/api/queue/pause': typeof ApiQueuePauseIndexRoute
  '/api/queue/play': typeof ApiQueuePlayIndexRoute
  '/api/queue/remove': typeof ApiQueueRemoveIndexRoute
  '/api/queue/skip': typeof ApiQueueSkipIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof authenticatedRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/connect': typeof AuthConnectRoute
  '/auth/link': typeof AuthLinkRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/auth/check-password-account': typeof ApiAuthCheckPasswordAccountRoute
  '/api/auth/delete-auto-created-account': typeof ApiAuthDeleteAutoCreatedAccountRoute
  '/api/auth/has-discord': typeof ApiAuthHasDiscordRoute
  '/dashboard': typeof authenticatedDashboardIndexRoute
  '/music': typeof authenticatedMusicIndexRoute
  '/api/guilds': typeof ApiGuildsIndexRoute
  '/api/healthz': typeof ApiHealthzIndexRoute
  '/api/queue': typeof ApiQueueIndexRoute
  '/api/guilds/$guildId/channels': typeof ApiGuildsGuildIdChannelsRoute
  '/api/queue/clear': typeof ApiQueueClearIndexRoute
  '/api/queue/pause': typeof ApiQueuePauseIndexRoute
  '/api/queue/play': typeof ApiQueuePlayIndexRoute
  '/api/queue/remove': typeof ApiQueueRemoveIndexRoute
  '/api/queue/skip': typeof ApiQueueSkipIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(authenticated)': typeof authenticatedRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/connect': typeof AuthConnectRoute
  '/auth/link': typeof AuthLinkRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/auth/check-password-account': typeof ApiAuthCheckPasswordAccountRoute
  '/api/auth/delete-auto-created-account': typeof ApiAuthDeleteAutoCreatedAccountRoute
  '/api/auth/has-discord': typeof ApiAuthHasDiscordRoute
  '/(authenticated)/dashboard/': typeof authenticatedDashboardIndexRoute
  '/(authenticated)/music/': typeof authenticatedMusicIndexRoute
  '/api/guilds/': typeof ApiGuildsIndexRoute
  '/api/healthz/': typeof ApiHealthzIndexRoute
  '/api/queue/': typeof ApiQueueIndexRoute
  '/api/guilds/$guildId/channels': typeof ApiGuildsGuildIdChannelsRoute
  '/api/queue/clear/': typeof ApiQueueClearIndexRoute
  '/api/queue/pause/': typeof ApiQueuePauseIndexRoute
  '/api/queue/play/': typeof ApiQueuePlayIndexRoute
  '/api/queue/remove/': typeof ApiQueueRemoveIndexRoute
  '/api/queue/skip/': typeof ApiQueueSkipIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/auth/connect'
    | '/auth/link'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify'
    | '/api/auth/$'
    | '/api/auth/check-password-account'
    | '/api/auth/delete-auto-created-account'
    | '/api/auth/has-discord'
    | '/dashboard'
    | '/music'
    | '/api/guilds'
    | '/api/healthz'
    | '/api/queue'
    | '/api/guilds/$guildId/channels'
    | '/api/queue/clear'
    | '/api/queue/pause'
    | '/api/queue/play'
    | '/api/queue/remove'
    | '/api/queue/skip'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/connect'
    | '/auth/link'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify'
    | '/api/auth/$'
    | '/api/auth/check-password-account'
    | '/api/auth/delete-auto-created-account'
    | '/api/auth/has-discord'
    | '/dashboard'
    | '/music'
    | '/api/guilds'
    | '/api/healthz'
    | '/api/queue'
    | '/api/guilds/$guildId/channels'
    | '/api/queue/clear'
    | '/api/queue/pause'
    | '/api/queue/play'
    | '/api/queue/remove'
    | '/api/queue/skip'
  id:
    | '__root__'
    | '/'
    | '/(authenticated)'
    | '/auth'
    | '/auth/connect'
    | '/auth/link'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify'
    | '/api/auth/$'
    | '/api/auth/check-password-account'
    | '/api/auth/delete-auto-created-account'
    | '/api/auth/has-discord'
    | '/(authenticated)/dashboard/'
    | '/(authenticated)/music/'
    | '/api/guilds/'
    | '/api/healthz/'
    | '/api/queue/'
    | '/api/guilds/$guildId/channels'
    | '/api/queue/clear/'
    | '/api/queue/pause/'
    | '/api/queue/play/'
    | '/api/queue/remove/'
    | '/api/queue/skip/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authenticatedRouteRoute: typeof authenticatedRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
  ApiAuthCheckPasswordAccountRoute: typeof ApiAuthCheckPasswordAccountRoute
  ApiAuthDeleteAutoCreatedAccountRoute: typeof ApiAuthDeleteAutoCreatedAccountRoute
  ApiAuthHasDiscordRoute: typeof ApiAuthHasDiscordRoute
  ApiGuildsIndexRoute: typeof ApiGuildsIndexRoute
  ApiHealthzIndexRoute: typeof ApiHealthzIndexRoute
  ApiQueueIndexRoute: typeof ApiQueueIndexRoute
  ApiGuildsGuildIdChannelsRoute: typeof ApiGuildsGuildIdChannelsRoute
  ApiQueueClearIndexRoute: typeof ApiQueueClearIndexRoute
  ApiQueuePauseIndexRoute: typeof ApiQueuePauseIndexRoute
  ApiQueuePlayIndexRoute: typeof ApiQueuePlayIndexRoute
  ApiQueueRemoveIndexRoute: typeof ApiQueueRemoveIndexRoute
  ApiQueueSkipIndexRoute: typeof ApiQueueSkipIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)': {
      id: '/(authenticated)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify': {
      id: '/auth/verify'
      path: '/verify'
      fullPath: '/auth/verify'
      preLoaderRoute: typeof AuthVerifyRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/link': {
      id: '/auth/link'
      path: '/link'
      fullPath: '/auth/link'
      preLoaderRoute: typeof AuthLinkRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/connect': {
      id: '/auth/connect'
      path: '/connect'
      fullPath: '/auth/connect'
      preLoaderRoute: typeof AuthConnectRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/api/queue/': {
      id: '/api/queue/'
      path: '/api/queue'
      fullPath: '/api/queue'
      preLoaderRoute: typeof ApiQueueIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/healthz/': {
      id: '/api/healthz/'
      path: '/api/healthz'
      fullPath: '/api/healthz'
      preLoaderRoute: typeof ApiHealthzIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/guilds/': {
      id: '/api/guilds/'
      path: '/api/guilds'
      fullPath: '/api/guilds'
      preLoaderRoute: typeof ApiGuildsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)/music/': {
      id: '/(authenticated)/music/'
      path: '/music'
      fullPath: '/music'
      preLoaderRoute: typeof authenticatedMusicIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/dashboard/': {
      id: '/(authenticated)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authenticatedDashboardIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/api/auth/has-discord': {
      id: '/api/auth/has-discord'
      path: '/api/auth/has-discord'
      fullPath: '/api/auth/has-discord'
      preLoaderRoute: typeof ApiAuthHasDiscordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/delete-auto-created-account': {
      id: '/api/auth/delete-auto-created-account'
      path: '/api/auth/delete-auto-created-account'
      fullPath: '/api/auth/delete-auto-created-account'
      preLoaderRoute: typeof ApiAuthDeleteAutoCreatedAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/check-password-account': {
      id: '/api/auth/check-password-account'
      path: '/api/auth/check-password-account'
      fullPath: '/api/auth/check-password-account'
      preLoaderRoute: typeof ApiAuthCheckPasswordAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/queue/skip/': {
      id: '/api/queue/skip/'
      path: '/api/queue/skip'
      fullPath: '/api/queue/skip'
      preLoaderRoute: typeof ApiQueueSkipIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/queue/remove/': {
      id: '/api/queue/remove/'
      path: '/api/queue/remove'
      fullPath: '/api/queue/remove'
      preLoaderRoute: typeof ApiQueueRemoveIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/queue/play/': {
      id: '/api/queue/play/'
      path: '/api/queue/play'
      fullPath: '/api/queue/play'
      preLoaderRoute: typeof ApiQueuePlayIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/queue/pause/': {
      id: '/api/queue/pause/'
      path: '/api/queue/pause'
      fullPath: '/api/queue/pause'
      preLoaderRoute: typeof ApiQueuePauseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/queue/clear/': {
      id: '/api/queue/clear/'
      path: '/api/queue/clear'
      fullPath: '/api/queue/clear'
      preLoaderRoute: typeof ApiQueueClearIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/guilds/$guildId/channels': {
      id: '/api/guilds/$guildId/channels'
      path: '/api/guilds/$guildId/channels'
      fullPath: '/api/guilds/$guildId/channels'
      preLoaderRoute: typeof ApiGuildsGuildIdChannelsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface authenticatedRouteRouteChildren {
  authenticatedDashboardIndexRoute: typeof authenticatedDashboardIndexRoute
  authenticatedMusicIndexRoute: typeof authenticatedMusicIndexRoute
}

const authenticatedRouteRouteChildren: authenticatedRouteRouteChildren = {
  authenticatedDashboardIndexRoute: authenticatedDashboardIndexRoute,
  authenticatedMusicIndexRoute: authenticatedMusicIndexRoute,
}

const authenticatedRouteRouteWithChildren =
  authenticatedRouteRoute._addFileChildren(authenticatedRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthConnectRoute: typeof AuthConnectRoute
  AuthLinkRoute: typeof AuthLinkRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthConnectRoute: AuthConnectRoute,
  AuthLinkRoute: AuthLinkRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthVerifyRoute: AuthVerifyRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authenticatedRouteRoute: authenticatedRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
  ApiAuthCheckPasswordAccountRoute: ApiAuthCheckPasswordAccountRoute,
  ApiAuthDeleteAutoCreatedAccountRoute: ApiAuthDeleteAutoCreatedAccountRoute,
  ApiAuthHasDiscordRoute: ApiAuthHasDiscordRoute,
  ApiGuildsIndexRoute: ApiGuildsIndexRoute,
  ApiHealthzIndexRoute: ApiHealthzIndexRoute,
  ApiQueueIndexRoute: ApiQueueIndexRoute,
  ApiGuildsGuildIdChannelsRoute: ApiGuildsGuildIdChannelsRoute,
  ApiQueueClearIndexRoute: ApiQueueClearIndexRoute,
  ApiQueuePauseIndexRoute: ApiQueuePauseIndexRoute,
  ApiQueuePlayIndexRoute: ApiQueuePlayIndexRoute,
  ApiQueueRemoveIndexRoute: ApiQueueRemoveIndexRoute,
  ApiQueueSkipIndexRoute: ApiQueueSkipIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
