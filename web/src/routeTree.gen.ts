/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as ApiQueueIndexRouteImport } from './routes/api/queue/index'
import { Route as ApiHealthzIndexRouteImport } from './routes/api/healthz/index'
import { Route as authenticatedListenIndexRouteImport } from './routes/(authenticated)/listen/index'
import { Route as authenticatedDashboardIndexRouteImport } from './routes/(authenticated)/dashboard/index'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiQueueIndexRoute = ApiQueueIndexRouteImport.update({
  id: '/api/queue/',
  path: '/api/queue/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiHealthzIndexRoute = ApiHealthzIndexRouteImport.update({
  id: '/api/healthz/',
  path: '/api/healthz/',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedListenIndexRoute =
  authenticatedListenIndexRouteImport.update({
    id: '/(authenticated)/listen/',
    path: '/listen/',
    getParentRoute: () => rootRouteImport,
  } as any)
const authenticatedDashboardIndexRoute =
  authenticatedDashboardIndexRouteImport.update({
    id: '/(authenticated)/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/dashboard': typeof authenticatedDashboardIndexRoute
  '/listen': typeof authenticatedListenIndexRoute
  '/api/healthz': typeof ApiHealthzIndexRoute
  '/api/queue': typeof ApiQueueIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/dashboard': typeof authenticatedDashboardIndexRoute
  '/listen': typeof authenticatedListenIndexRoute
  '/api/healthz': typeof ApiHealthzIndexRoute
  '/api/queue': typeof ApiQueueIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/(authenticated)/dashboard/': typeof authenticatedDashboardIndexRoute
  '/(authenticated)/listen/': typeof authenticatedListenIndexRoute
  '/api/healthz/': typeof ApiHealthzIndexRoute
  '/api/queue/': typeof ApiQueueIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/api/auth/$'
    | '/dashboard'
    | '/listen'
    | '/api/healthz'
    | '/api/queue'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/api/auth/$'
    | '/dashboard'
    | '/listen'
    | '/api/healthz'
    | '/api/queue'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/api/auth/$'
    | '/(authenticated)/dashboard/'
    | '/(authenticated)/listen/'
    | '/api/healthz/'
    | '/api/queue/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
  authenticatedDashboardIndexRoute: typeof authenticatedDashboardIndexRoute
  authenticatedListenIndexRoute: typeof authenticatedListenIndexRoute
  ApiHealthzIndexRoute: typeof ApiHealthzIndexRoute
  ApiQueueIndexRoute: typeof ApiQueueIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/queue/': {
      id: '/api/queue/'
      path: '/api/queue'
      fullPath: '/api/queue'
      preLoaderRoute: typeof ApiQueueIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/healthz/': {
      id: '/api/healthz/'
      path: '/api/healthz'
      fullPath: '/api/healthz'
      preLoaderRoute: typeof ApiHealthzIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)/listen/': {
      id: '/(authenticated)/listen/'
      path: '/listen'
      fullPath: '/listen'
      preLoaderRoute: typeof authenticatedListenIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)/dashboard/': {
      id: '/(authenticated)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authenticatedDashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
  authenticatedDashboardIndexRoute: authenticatedDashboardIndexRoute,
  authenticatedListenIndexRoute: authenticatedListenIndexRoute,
  ApiHealthzIndexRoute: ApiHealthzIndexRoute,
  ApiQueueIndexRoute: ApiQueueIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
